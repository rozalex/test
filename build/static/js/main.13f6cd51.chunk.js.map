{"version":3,"sources":["style/style.module.scss","components/Tasks.js","App.js","index.js"],"names":["module","exports","Tasks","props","useState","data","setData","checkedItems","setCheckedItems","taskDetails","setTaskDetails","lsUsernames","localStorage","getItem","JSON","parse","userNames","useEffect","lsCheckedItems","setItem","stringify","className","styles","tasksWrapper","addSection","Input","newItemInput","onChange","e","target","value","placeholder","Button","positive","onClick","newData","title","completed","id","uuid","overflowContainer","taskItems","map","item","key","card","checkedCard","cardActions","Icon","itetmId","filter","actionIcon","name","size","checked","textContainer","Checkbox","label","cardCheckbox","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,aAAe,4BAA4B,WAAa,0BAA0B,aAAe,4BAA4B,kBAAoB,iCAAiC,UAAY,yBAAyB,KAAO,oBAAoB,YAAc,2BAA2B,WAAa,0BAA0B,aAAe,4BAA4B,cAAgB,6BAA6B,SAAW,wBAAwB,YAAc,6B,6LCMhdC,EAAQ,SAAAC,GAAU,IAAD,EACFC,mBAAS,IADP,mBACnBC,EADmB,KACbC,EADa,OAEcF,mBAAS,IAFvB,mBAEnBG,EAFmB,KAELC,EAFK,OAGYJ,mBAAS,IAHrB,mBAGnBK,EAHmB,KAGNC,EAHM,KAKtBC,EAAcC,aAAaC,QAAQ,gBACvCF,EAAcA,EAAcG,KAAKC,MAAMJ,GAAe,GAN5B,MAONP,mBAASO,GAAtBK,EAPmB,oBAS1BC,qBAAU,WACN,IAAIZ,EAAOO,aAAaC,QAAQ,WAC5BK,EAAiBN,aAAaC,QAAQ,gBAEtCR,IACAA,EAAOS,KAAKC,MAAMV,GAClBa,EAAiBJ,KAAKC,MAAMG,GAE5BV,EAAgBU,GAChBZ,EAAQD,MAEd,IAEFY,qBAAU,WACNL,aAAaO,QAAQ,UAAWL,KAAKM,UAAUf,MACjD,CAACA,IAEHY,qBAAU,WACNL,aAAaO,QAAQ,eAAgBL,KAAKM,UAAUJ,MACtD,CAACA,IAEHC,qBAAU,WACNL,aAAaO,QAAQ,eAAgBL,KAAKM,UAAUb,MACtD,CAACA,IAwBH,OACI,yBAAKc,UAAWC,IAAOC,cACnB,yBAAKF,UAAWC,IAAOE,YACnB,kBAACC,EAAA,EAAD,CAAOJ,UAAWC,IAAOI,aAAcC,SAXzB,SAACC,GACvBlB,EAAekB,EAAEC,OAAOC,QAUoDA,MAAOrB,EAAasB,YAAY,aACpG,kBAACC,EAAA,EAAD,CAAQC,UAAQ,EAACC,QAtBb,WACZ,IAAMC,EAAU,CACZC,MAAO3B,EACP4B,WAAW,EACXC,GAAIC,OAERjC,EAAQ,GAAD,mBAAKD,GAAL,CAAW8B,KAClBzB,EAAe,MAeP,SAEJ,yBAAKW,UAAWC,IAAOkB,mBACnB,yBAAKnB,UAAWC,IAAOmB,WAClBpC,EAAKqC,KAAI,SAACC,GACP,OACI,yBAAKC,IAAKD,EAAKL,GAAIjB,UAAS,UAAMC,IAAOuB,KAAb,YAAqBtC,EAAaoC,EAAKL,KAAOhB,IAAOwB,cAC7E,yBAAKzB,UAAWC,IAAOyB,aACnB,kBAACC,EAAA,EAAD,CAAMd,QAAS,kBAhB/Be,EAgB4CN,EAAKL,QAf7DhC,EAAQ,YAAID,EAAK6C,QAAO,SAAAP,GAAI,OAAIA,EAAKL,KAAOW,OADjC,IAACA,GAgBsD5B,UAAWC,IAAO6B,WAAYC,KAAK,QAAQC,KAAK,WAE1F,yBAAKnB,QAAS,kBApCpBkB,EAoCuCT,EAAKL,GApCtCgB,GAoC2C/C,EAAaoC,EAAKL,SAnCrF9B,EAAgB,eAAID,EAAL,eAAoB6C,EAAOE,KADzB,IAACF,EAAME,GAoCmEjC,UAAWC,IAAOiC,eACjF,kBAACC,EAAA,EAAD,CAAUC,MAAOd,EAAKP,MAAOf,UAAWC,IAAOoC,aAAcN,KAAMT,EAAKL,GAAIgB,QAAS/C,EAAaoC,EAAKL,eC3D5HqB,MAVf,WACE,OACE,6BACE,iCACE,kBAAC,EAAD,SCRRC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.13f6cd51.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"tasksWrapper\":\"style_tasksWrapper__1c0Bt\",\"addSection\":\"style_addSection__li0rP\",\"newItemInput\":\"style_newItemInput__1SnKY\",\"overflowContainer\":\"style_overflowContainer__1Hw2m\",\"taskItems\":\"style_taskItems__3g-ZH\",\"card\":\"style_card__22v8i\",\"cardActions\":\"style_cardActions__6AD5o\",\"actionIcon\":\"style_actionIcon__5sSB-\",\"cardCheckbox\":\"style_cardCheckbox__1ciBw\",\"textContainer\":\"style_textContainer__mPXpn\",\"cardText\":\"style_cardText__z8l67\",\"checkedCard\":\"style_checkedCard__vjaxY\"};","import React, {useEffect, useState} from 'react';\r\nimport uuid from 'react-uuid';\r\nimport {Input, Button, Icon, Checkbox} from 'semantic-ui-react';\r\n\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport styles from '../style/style.module.scss';\r\n\r\nexport const Tasks = props => {\r\n    const [data, setData] = useState([]);\r\n    const [checkedItems, setCheckedItems] = useState({});\r\n    const [taskDetails, setTaskDetails] = useState(\"\");\r\n\r\n    let lsUsernames = localStorage.getItem(\"appUsernames\");\r\n    lsUsernames = lsUsernames ? JSON.parse(lsUsernames) : [];\r\n    const [userNames] = useState(lsUsernames);\r\n\r\n    useEffect(() => {\r\n        let data = localStorage.getItem(\"appdata\");\r\n        let lsCheckedItems = localStorage.getItem(\"checkedItems\");\r\n        \r\n        if (data) {\r\n            data = JSON.parse(data);\r\n            lsCheckedItems = JSON.parse(lsCheckedItems);\r\n\r\n            setCheckedItems(lsCheckedItems);\r\n            setData(data);\r\n        }\r\n    },[]);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"appdata\", JSON.stringify(data));\r\n    },[data]);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"appUsernames\", JSON.stringify(userNames));\r\n    },[userNames]);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"checkedItems\", JSON.stringify(checkedItems));\r\n    },[checkedItems]);\r\n\r\n    const handleChange = (name, checked) => {\r\n        setCheckedItems({...checkedItems, [name]: checked});\r\n    }\r\n\r\n    const addTask = () => {\r\n        const newData = {\r\n            title: taskDetails, \r\n            completed: false,\r\n            id: uuid()\r\n        }\r\n        setData([...data, newData]);\r\n        setTaskDetails(\"\");\r\n    }\r\n    \r\n    const changeTaskDetails = (e) => {\r\n        setTaskDetails(e.target.value);\r\n    }\r\n\r\n    const remove = (itetmId) => {\r\n        setData([...data.filter(item => item.id !== itetmId)]);\r\n    }\r\n\r\n    return ( \r\n        <div className={styles.tasksWrapper}>\r\n            <div className={styles.addSection}>\r\n                <Input className={styles.newItemInput} onChange={changeTaskDetails} value={taskDetails} placeholder='New Task' />\r\n                <Button positive onClick={addTask}>Save</Button>\r\n            </div>\r\n            <div className={styles.overflowContainer}>\r\n                <div className={styles.taskItems}>\r\n                    {data.map((item) => {\r\n                        return (\r\n                            <div key={item.id} className={ `${styles.card} ${checkedItems[item.id] && styles.checkedCard}`}>\r\n                                <div className={styles.cardActions}>\r\n                                    <Icon onClick={() => remove(item.id)} className={styles.actionIcon} name='trash' size='small' />\r\n                                </div>\r\n                                <div onClick={() => handleChange(item.id, !checkedItems[item.id])} className={styles.textContainer}>\r\n                                    <Checkbox label={item.title} className={styles.cardCheckbox} name={item.id} checked={checkedItems[item.id]} />\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\nimport {Tasks} from './components';\n\n// const fetchSomethig = () => {\n//   fetch('https://jsonplaceholder.typicode.com/todos/1')\n//   .then(response => response.json())\n//   .then(json => console.log(json))\n// }\n\nfunction App() {\n  return (\n    <div>\n      <section>\n        <Tasks />\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}